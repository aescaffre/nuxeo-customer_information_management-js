0 info it worked if it ends with ok
1 verbose cli [ '/usr/local/bin/node',
1 verbose cli   '/usr/local/bin/npm',
1 verbose cli   'install',
1 verbose cli   'http-server',
1 verbose cli   '-g' ]
2 info using npm@1.4.3
3 info using node@v0.11.12-pre
4 verbose cache add [ 'http-server', null ]
5 verbose cache add name=undefined spec="http-server" args=["http-server",null]
6 verbose parsed url { protocol: null,
6 verbose parsed url   slashes: null,
6 verbose parsed url   auth: null,
6 verbose parsed url   host: null,
6 verbose parsed url   port: null,
6 verbose parsed url   hostname: null,
6 verbose parsed url   hash: null,
6 verbose parsed url   search: null,
6 verbose parsed url   query: null,
6 verbose parsed url   pathname: 'http-server',
6 verbose parsed url   path: 'http-server',
6 verbose parsed url   href: 'http-server' }
7 silly lockFile ed608307-http-server http-server
8 verbose lock http-server /Users/aescaffre/.npm/ed608307-http-server.lock
9 silly lockFile ed608307-http-server http-server
10 silly lockFile ed608307-http-server http-server
11 verbose addNamed [ 'http-server', '' ]
12 verbose addNamed [ null, '*' ]
13 silly lockFile 550353c6-http-server http-server@
14 verbose lock http-server@ /Users/aescaffre/.npm/550353c6-http-server.lock
15 silly addNameRange { name: 'http-server', range: '*', hasData: false }
16 verbose url raw http-server
17 verbose url resolving [ 'https://registry.npmjs.org/', './http-server' ]
18 verbose url resolved https://registry.npmjs.org/http-server
19 info trying registry request attempt 1 at 00:45:28
20 verbose etag "EN6LMCPWPTQT3EDSTPUZPRHZR"
21 http GET https://registry.npmjs.org/http-server
22 http 304 https://registry.npmjs.org/http-server
23 silly registry.get cb [ 304,
23 silly registry.get   { date: 'Thu, 06 Mar 2014 23:45:28 GMT',
23 silly registry.get     server: 'Apache',
23 silly registry.get     via: '1.1 varnish',
23 silly registry.get     'last-modified': 'Thu, 06 Mar 2014 23:45:28 GMT',
23 silly registry.get     'cache-control': 'max-age=1',
23 silly registry.get     etag: '"EN6LMCPWPTQT3EDSTPUZPRHZR"',
23 silly registry.get     'x-served-by': 'cache-fra1225-FRA',
23 silly registry.get     'x-cache': 'MISS',
23 silly registry.get     'x-cache-hits': '0',
23 silly registry.get     'x-timer': 'S1394149528.511879921,VS0,VE117',
23 silly registry.get     vary: 'Accept',
23 silly registry.get     'content-length': '0',
23 silly registry.get     connection: 'close' } ]
24 verbose etag http-server from cache
25 silly addNameRange number 2 { name: 'http-server', range: '*', hasData: true }
26 silly addNameRange versions [ 'http-server',
26 silly addNameRange   [ '0.1.0',
26 silly addNameRange     '0.1.1',
26 silly addNameRange     '0.1.3',
26 silly addNameRange     '0.2.1',
26 silly addNameRange     '0.2.2',
26 silly addNameRange     '0.2.3',
26 silly addNameRange     '0.2.4',
26 silly addNameRange     '0.2.5',
26 silly addNameRange     '0.2.6',
26 silly addNameRange     '0.2.9',
26 silly addNameRange     '0.3.0',
26 silly addNameRange     '0.4.0',
26 silly addNameRange     '0.4.1',
26 silly addNameRange     '0.5.0',
26 silly addNameRange     '0.5.1',
26 silly addNameRange     '0.5.2',
26 silly addNameRange     '0.5.3',
26 silly addNameRange     '0.5.5',
26 silly addNameRange     '0.6.0',
26 silly addNameRange     '0.6.1' ] ]
27 verbose addNamed [ 'http-server', '0.6.1' ]
28 verbose addNamed [ '0.6.1', '0.6.1' ]
29 silly lockFile 1e2b2518-http-server-0-6-1 http-server@0.6.1
30 verbose lock http-server@0.6.1 /Users/aescaffre/.npm/1e2b2518-http-server-0-6-1.lock
31 silly lockFile 1e2b2518-http-server-0-6-1 http-server@0.6.1
32 silly lockFile 1e2b2518-http-server-0-6-1 http-server@0.6.1
33 silly lockFile 550353c6-http-server http-server@
34 silly lockFile 550353c6-http-server http-server@
35 silly resolved [ { name: 'http-server',
35 silly resolved     version: '0.6.1',
35 silly resolved     author: { name: 'Nodejitsu', email: 'support@nodejitsu.com' },
35 silly resolved     description: 'a simple zero-configuration command-line http server',
35 silly resolved     main: './lib/http-server',
35 silly resolved     repository:
35 silly resolved      { type: 'git',
35 silly resolved        url: 'git://github.com/nodeapps/http-server.git' },
35 silly resolved     keywords: [ 'cli', 'command' ],
35 silly resolved     scripts:
35 silly resolved      { start: 'node ./bin/http-server',
35 silly resolved        test: 'vows --spec --isolate' },
35 silly resolved     contributors:
35 silly resolved      [ [Object],
35 silly resolved        [Object],
35 silly resolved        [Object],
35 silly resolved        [Object],
35 silly resolved        [Object],
35 silly resolved        [Object],
35 silly resolved        [Object],
35 silly resolved        [Object] ],
35 silly resolved     dependencies:
35 silly resolved      { colors: '0.6.x',
35 silly resolved        optimist: '0.5.x',
35 silly resolved        union: '0.3.x',
35 silly resolved        ecstatic: '0.4.x',
35 silly resolved        portfinder: '0.2.x',
35 silly resolved        opener: '~1.3.0' },
35 silly resolved     devDependencies: { vows: '0.7.x', request: '2.21.x' },
35 silly resolved     bugs: { url: 'https://github.com/nodeapps/http-server/issues' },
35 silly resolved     licenses: [ [Object] ],
35 silly resolved     analyze: false,
35 silly resolved     preferGlobal: 'true',
35 silly resolved     bin: { 'http-server': './bin/http-server' },
35 silly resolved     readme: '# http-server: a command-line http server\n\n`http-server` is a simple, zero-configuration command-line http server.  It is powerful enough for production usage, but it\'s simple and hackable enough to be used for testing, local development, and learning.\n\n![](https://github.com/nodeapps/http-server/raw/master/screenshots/public.png)\n\n# Installing globally:\n\nInstallation via `npm`.  If you don\'t have `npm` yet:\n\n     curl https://npmjs.org/install.sh | sh\n     \nOnce you have `npm`:\n\n     npm install http-server -g\n     \nThis will install `http-server` globally so that it may be run from the command line.\n\n## Usage:\n\n     http-server [path] [options]\n\n`[path]` defaults to `./public` if the folder exists, and `./` otherwise.\n\n# Installing as a node app\n\n     mkdir myapp\n     cd myapp/\n     jitsu install http-server\n\n*If you do not have `jitsu` installed you can install it via `npm install jitsu -g`*\n\n## Usage\n\n### Starting http-server locally\n\n     node bin/http-server\n\n*Now you can visit http://localhost:8080 to view your server*\n\n### Deploy http-server to nodejitsu\n\n     jitsu deploy\n\n*You will now be prompted for a `subdomain` to deploy your application on*\n\n## Available Options:\n\n`-p` Port to listen for connections on (defaults to 8080)\n\n`-a` Address to bind to (defaults to \'0.0.0.0\')\n\n`-d` Show directory listings (defaults to \'True\')\n\n`-i` Display autoIndex (defaults to \'True\')\n\n`-e` or `--ext` Default file extension (defaults to \'html\')\n\n`-s` or `--silent` In silent mode, log messages aren\'t logged to the console.\n\n`-h` or `--help` Displays a list of commands and exits.\n\n`-c` Set cache time (in seconds) for cache-control max-age header, e.g. -c10 for 10 seconds. To disable caching, use -c-1.\n',
35 silly resolved     readmeFilename: 'README.md',
35 silly resolved     homepage: 'https://github.com/nodeapps/http-server',
35 silly resolved     _id: 'http-server@0.6.1',
35 silly resolved     _from: 'http-server@' } ]
36 info install http-server@0.6.1 into /usr/local/lib
37 info installOne http-server@0.6.1
38 info /usr/local/lib/node_modules/http-server unbuild
39 verbose tar unpack /Users/aescaffre/.npm/http-server/0.6.1/package.tgz
40 silly lockFile c2cc12bc-cal-lib-node-modules-http-server tar:///usr/local/lib/node_modules/http-server
41 verbose lock tar:///usr/local/lib/node_modules/http-server /Users/aescaffre/.npm/c2cc12bc-cal-lib-node-modules-http-server.lock
42 silly lockFile 762a53da-pm-http-server-0-6-1-package-tgz tar:///Users/aescaffre/.npm/http-server/0.6.1/package.tgz
43 verbose lock tar:///Users/aescaffre/.npm/http-server/0.6.1/package.tgz /Users/aescaffre/.npm/762a53da-pm-http-server-0-6-1-package-tgz.lock
44 silly gunzTarPerm modes [ '755', '644' ]
45 error Error: EACCES, mkdir '/usr/local/lib/node_modules/http-server'
45 error  { [Error: EACCES, mkdir '/usr/local/lib/node_modules/http-server']
45 error   stack: 'Error: EACCES, mkdir \'/usr/local/lib/node_modules/http-server\'',
45 error   errno: -13,
45 error   code: 'EACCES',
45 error   path: '/usr/local/lib/node_modules/http-server',
45 error   fstream_type: 'Directory',
45 error   fstream_path: '/usr/local/lib/node_modules/http-server',
45 error   fstream_class: 'DirWriter',
45 error   fstream_stack:
45 error    [ '/usr/local/lib/node_modules/npm/node_modules/fstream/lib/dir-writer.js:36:23',
45 error      '/usr/local/lib/node_modules/npm/node_modules/mkdirp/index.js:37:53',
45 error      'Object.oncomplete (fs.js:97:15)' ] }
46 error Please try running this command again as root/Administrator.
47 error System Darwin 13.0.2
48 error command "/usr/local/bin/node" "/usr/local/bin/npm" "install" "http-server" "-g"
49 error cwd /Users/aescaffre/Sources/nuxeo-customer_information_management-js
50 error node -v v0.11.12-pre
51 error npm -v 1.4.3
52 error path /usr/local/lib/node_modules/http-server
53 error fstream_path /usr/local/lib/node_modules/http-server
54 error fstream_type Directory
55 error fstream_class DirWriter
56 error code EACCES
57 error errno -13
58 error stack Error: EACCES, mkdir '/usr/local/lib/node_modules/http-server'
59 error fstream_stack /usr/local/lib/node_modules/npm/node_modules/fstream/lib/dir-writer.js:36:23
59 error fstream_stack /usr/local/lib/node_modules/npm/node_modules/mkdirp/index.js:37:53
59 error fstream_stack Object.oncomplete (fs.js:97:15)
60 verbose exit [ -13, true ]
